# Task ID: 10
# Title: AI Opponents, Visual/Audio Polish & Performance Optimization
# Status: pending
# Dependencies: None
# Priority: medium
# Description: Create heuristic-based AI, replace placeholders with final assets, add SFX/BGM, and profile render loop.
# Details:
AI (backend):
• Decision tree each 5 s: if resourcesTileNearby ⇒ place, else if armyWeak ⇒ train, else attack weakest rival.
• Pathfinding shares A* util.
Visuals:
• Load texture atlas .json generated by Aseprite.
• Animations: GSAP timeline for tile fade-in, unit sprite sheet walk cycles.
Audio:
• Howler.js for music loop + combat SFX.
Performance:
• use PIXI.BaseTexture.fromBuffer batching; limit units/player 50; auto-purge textures on lost context.


# Test Strategy:
Play solo vs 3 AIs: ensure they progress Manor→Kingdom and attack.
Lighthouse performance audit: 60 FPS, memory <300 MB on Chrome i3 laptop.
Audio: mute/unmute toggles without crackle.

# Subtasks:
## 1. AI Decision Tree Implementation [pending]
### Dependencies: None
### Description: Build heuristic-based decision tree that evaluates economy, army strength and enemy weakness every 5 s to issue high-level commands.
### Details:
KPIs:
- ≥95% of decision cycles execute <2 ms on Intel i3-8100.
- AI wins ≥60% of mirror matches against random baseline.
Toolchain:
- TypeScript + ts-pattern for decision node DSL.
- Jest with jsdom for headless AI outcome tests.
- ESLint + Prettier enforced via husky pre-commit.

## 2. Pathfinding & Tactical Evaluation [pending]
### Dependencies: 10.1
### Description: Integrate A* pathfinding with threat heat-map to let AI units navigate terrain and choose attack vectors.
### Details:
KPIs:
- Path calc <1 ms for 90% of calls (measured over 10 000 paths).
- Units take ≤5% more steps than theoretical shortest path.
Toolchain:
- pathfinding.ts library, shared worker for off-main-thread search.
- WebWorker benchmark harness with Benchmark.js.
- Chrometrace export for micro-profiling.

## 3. Asset Pipeline & Texture Atlas Integration [pending]
### Dependencies: None
### Description: Automate sprite export from Aseprite and pack into texture atlases consumed by PixiJS.
### Details:
KPIs:
- Atlas generation completes <30 s for 500 assets.
- Final atlas count ≤4 (2k×2k) with <5% wasted space.
Toolchain:
- Aseprite CLI + TexturePacker.
- Node Gulp script for watch & rebuild.
- Lint-staged to validate asset naming conventions.

## 4. Animation System Linking (GSAP) [pending]
### Dependencies: 10.3
### Description: Hook GSAP timelines to atlas frames enabling tile fades, walk cycles and combat effects.
### Details:
KPIs:
- 100% animations start within 16 ms of trigger.
- CPU overhead from GSAP ≤3% during mass unit march (50 units/player).
Toolchain:
- GSAP 3.x with PixiPlugin.
- Storybook stories for animation previews.
- Perf baseline captured via Spector.js.

## 5. Audio Layer with Howler.js [pending]
### Dependencies: 10.3
### Description: Implement music loops, combat SFX and mute/unmute toggles using Howler.js audio sprites.
### Details:
KPIs:
- Audio latency ≤50 ms after event dispatch.
- Memory footprint for decoded buffers ≤40 MB.
Toolchain:
- Audacity batch export to OGG + MP3.
- howler.js 2.x.
- Web Audio Inspector Chrome extension for analysis.

## 6. Render Loop Profiling & Optimization [pending]
### Dependencies: 10.2, 10.3, 10.4, 10.5
### Description: Profile PixiJS render loop, implement batching & texture purge to sustain 60 FPS under full load.
### Details:
KPIs:
- Maintain ≥60 FPS, frame budget ≤16.6 ms (95th percentile) with 200 units and full effects.
- Peak GPU memory ≤300 MB.
Toolchain:
- PixiJS devtools, Chrome Perf panel.
- pixi-stats overlay, WebGL Profiler.
- CI Lighthouse run with puppeteer.

## 7. QA Playtest & Performance Certification [pending]
### Dependencies: 10.1, 10.2, 10.3, 10.4, 10.5, 10.6
### Description: Conduct structured playtests vs 3 AI, certify performance, visuals and audio against KPIs.
### Details:
KPIs:
- 0 blocker/critical bugs across 10 playtest sessions.
- Pass Lighthouse Performance score ≥90 on i3 laptop.
- Average player session crash rate <1% over 50 hours cumulative testing.
Toolchain:
- Cypress e2e scripted scenarios.
- Steam Playtest build uploads with telemetry.
- Jira for defect tracking, TestRail for case management.

